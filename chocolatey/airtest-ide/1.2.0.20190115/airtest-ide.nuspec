<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>airtest-ide</id>
    <version>1.2.0.20190115</version>
    <packageSourceUrl>https://github.com/EpicMorg/chocolatey</packageSourceUrl>
    <owners>epicmorg</owners>
    <title>Airtest IDE (Portable)</title>
    <authors>NetEase Inc</authors>
    <projectUrl>https://airtest.netease.com/</projectUrl>
    <iconUrl>https://rawcdn.githack.com/EpicMorg/chocolatey/fa6b2288d40bb748eef08ab9b67fd9fb588fec3e/.github/airtest-ide/icons/airtest_128.png</iconUrl>
    <copyright>Copyright (c) 2018 NetEase, Inc</copyright>
    <licenseUrl>https://github.com/AirtestProject/Airtest/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/AirtestProject/Airtest</projectSourceUrl>
    <docsUrl>https://airtest.doc.io.netease.com/en/</docsUrl>
    <bugTrackerUrl>https://github.com/AirtestProject/Airtest/issues</bugTrackerUrl>
    <tags>airtest-ide airtest ide poco pocoui poco-ui selenium automatisation test python</tags>
    <summary>Cross platform UI automation IDE</summary>
    <description># Airtest IDE (Portable)
### About 
* **Airtest** - is an Cross-Platform UI Automation Framework for Games and Apps.
* **AirtestIDE** - is an out of the box GUI tool that helps to create and run cases in a user-friendly way. AirtestIDE supports a complete automation workflow: `create, run, report`.
# Features
*   **Write Once, Run Anywhere:** Airtest provides cross-platform APIs, including app installation, simulated input, assertion and so forth. Airtest uses image recognition technology to locate UI elements so that you can automate games and apps without injecting any code. 
*   **Fully Scalable:** Airtest cases can be easily run on large device farms, using commandline or python API. HTML reports with detailed info and screen recording allow you to quickly locate failure points. NetEase builds Airlab on top of the Airtest Project.
*   **Poco:** Poco adds the ability to directly access object(UI widget) hierarchy across the major platforms and game engines. It allows writing instructions in Python, to achieve more advanced automation.
## Game Test
With image recognition and UI hierarchy, our automation framework support game testing.
- Supports all game engines and apps
- Multiplatform
- Easy to use
## Android native apps
In Android native apps testing process, Airtest can play a siginificant role - plug-and-play.
## Windows applications
Support for Windows applications, write one code and run the it across the platforms.
## iOS Support
With poco, Airtest can access iOS native element and find out their location and attributes, which make iOS testing process easy and convenient.
## Selenium Plugin
Base on Chrome Devtools Protocol, record and generate selenium scripts, accurately access web element.
# Documentation
You can find the complete Airtest documentation on readthedocs.
    </description>
    <releaseNotes># V1.2.0.20190115
## Release Date: 2019-01-15

## New Features
- Added Android Assistant function, provided shortcut operation function of some ADB commands of Android mobile phone, and applications management function, and mobile phone shell debugging window. More
- Added code auto-completion function, enable this function and set the local Python.exe path to get better auto-completion effect. If auto-completion is not enabled, a simple version of the completion function will be used. It works better than the previous completion function.More
- Airtest adds the swipe_along interface and adds the search parameter to the text interface.
- AirtestIDE right-click menu adds image mode and py code mode switching.
- Iterate the ImageEditor, add image renaming, step by step to view the recognition function. More
- Set the window to increase the real-time display of the mouse in the device screen coordinate function. More
- Add the about page of AirtestIDE.
- Instructions for adding future overseas equipment provider Headspin.

## Bug Fixes
- Fixed a bug in device button rendering exception when multiple devices were connected.
- Fixed a runtime ResourceWarning issue.
- Fixed the get_top_activity result error of the device above Android8.0.
- Fixed the data type error when the Airtest.windows interface is initialized.
- On some win7 systems and low version android devices, there may be a problem with the mobile screen when using version 1.1.0. That is because the previous version we updated the ADB version to 1.40. We judged in version 1.2.0, if it is win7 system will replace the ADB in the IDE directory with the old ADB1.39 version. If the local environment running script conflicts due to different versions, it is recommended to manually change the ADB version to the unified version (win7 system is recommended to use 1.39, which can be obtained in the tools/adb39 under the IDE directory. Win10 system users recommend to continue to use the latest version of the code).

    </releaseNotes>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
