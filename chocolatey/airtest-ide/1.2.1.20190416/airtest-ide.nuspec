<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>airtest-ide</id>
    <version>1.2.1.20190416</version>
    <packageSourceUrl>https://github.com/EpicMorg/chocolatey</packageSourceUrl>
    <owners>epicmorg</owners>
    <title>Airtest IDE (Portable)</title>
    <authors>NetEase Inc</authors>
    <projectUrl>https://airtest.netease.com/</projectUrl>
    <iconUrl>https://rawcdn.githack.com/EpicMorg/chocolatey/fa6b2288d40bb748eef08ab9b67fd9fb588fec3e/.github/airtest-ide/icons/airtest_128.png</iconUrl>
    <copyright>Copyright (c) 2018 NetEase, Inc</copyright>
    <licenseUrl>https://github.com/AirtestProject/Airtest/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/AirtestProject/Airtest</projectSourceUrl>
    <docsUrl>https://airtest.doc.io.netease.com/en/</docsUrl>
    <bugTrackerUrl>https://github.com/AirtestProject/Airtest/issues</bugTrackerUrl>
    <tags>airtest-ide airtest ide poco pocoui poco-ui selenium automatisation test python</tags>
    <summary>Cross platform UI automation IDE</summary>
    <description># Airtest IDE (Portable)
### About 
* **Airtest** - is an Cross-Platform UI Automation Framework for Games and Apps.
* **AirtestIDE** - is an out of the box GUI tool that helps to create and run cases in a user-friendly way. AirtestIDE supports a complete automation workflow: `create, run, report`.
# Features
*   **Write Once, Run Anywhere:** Airtest provides cross-platform APIs, including app installation, simulated input, assertion and so forth. Airtest uses image recognition technology to locate UI elements so that you can automate games and apps without injecting any code. 
*   **Fully Scalable:** Airtest cases can be easily run on large device farms, using commandline or python API. HTML reports with detailed info and screen recording allow you to quickly locate failure points. NetEase builds Airlab on top of the Airtest Project.
*   **Poco:** Poco adds the ability to directly access object(UI widget) hierarchy across the major platforms and game engines. It allows writing instructions in Python, to achieve more advanced automation.
## Game Test
With image recognition and UI hierarchy, our automation framework support game testing.
- Supports all game engines and apps
- Multiplatform
- Easy to use
## Android native apps
In Android native apps testing process, Airtest can play a siginificant role - plug-and-play.
## Windows applications
Support for Windows applications, write one code and run the it across the platforms.
## iOS Support
With poco, Airtest can access iOS native element and find out their location and attributes, which make iOS testing process easy and convenient.
## Selenium Plugin
Base on Chrome Devtools Protocol, record and generate selenium scripts, accurately access web element.
# Documentation
You can find the complete Airtest documentation on readthedocs.
    </description>
    <releaseNotes># V1.2.1.20190416
## Release Date: 2019-04-16

## New Features
- Airtest and IDE have added another way to create new scripts, support for creating and running pure python scripts. 
- Added automatic backup script and recovery script function to avoid losing script content when crashing.
- When choose to connect the device in ADB Touch mode, actually use the ADB command to control the mobile phone now (the Minitouch control is used in the past, which causes some non-mobile devices to operate the screen), but the delay is slightly higher.
- Replace some of the icons, and may continue to modify them later.
- Several new image recognition algorithms have been added. Please refer to the documentation for comparison and selection of operational efficiency.

## Bug Fixes
- Fixed a crash caused by displaying the auto-complete menu under mac.
- Fix bug in horizontal and vertical orientation when right-running script.
- Fixed the problem that the mac packaged version could not print Chinese.
- Fixed a bug where the IDE could not exit normally after connecting ios multiple times.
- When generating poco code automatically, ignore array and UI number of the same name.
- When you double-click the poco node to generate the code, it will not automatically wrap, and the focus will automatically return to the editing window for subsequent editing.
- Cancel the automatic completion pull-down menu to monitor the HOME and END buttons.
- Fixed an issue where the directory folder structure in the script was lost when the script was packaged.
- Airtest fixes the problem that the yosemite input method cannot be enabled correctly when remotely connecting the mobile phone. Some Samsung mobile phone sliding operation is abnormal. In the low version pip, the installation may fail.
- Fix double screen misplacement on windows.

    </releaseNotes>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
