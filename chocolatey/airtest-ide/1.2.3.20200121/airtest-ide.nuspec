<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>airtest-ide</id>
    <version>1.2.3.20200121</version>
    <packageSourceUrl>https://github.com/EpicMorg/chocolatey</packageSourceUrl>
    <owners>epicmorg</owners>
    <title>Airtest IDE (Portable)</title>
    <authors>NetEase Inc</authors>
    <projectUrl>https://airtest.netease.com/</projectUrl>
    <iconUrl>https://rawcdn.githack.com/EpicMorg/chocolatey/fa6b2288d40bb748eef08ab9b67fd9fb588fec3e/.github/airtest-ide/icons/airtest_128.png</iconUrl>
    <copyright>Copyright (c) 2018 NetEase, Inc</copyright>
    <licenseUrl>https://github.com/AirtestProject/Airtest/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/AirtestProject/Airtest</projectSourceUrl>
    <docsUrl>https://airtest.doc.io.netease.com/en/</docsUrl>
    <bugTrackerUrl>https://github.com/AirtestProject/Airtest/issues</bugTrackerUrl>
    <tags>airtest-ide airtest ide poco pocoui poco-ui selenium automatisation test python</tags>
    <summary>Cross platform UI automation IDE</summary>
    <description># Airtest IDE (Portable)
### About 
* **Airtest** - is an Cross-Platform UI Automation Framework for Games and Apps.
* **AirtestIDE** - is an out of the box GUI tool that helps to create and run cases in a user-friendly way. AirtestIDE supports a complete automation workflow: `create, run, report`.
# Features
*   **Write Once, Run Anywhere:** Airtest provides cross-platform APIs, including app installation, simulated input, assertion and so forth. Airtest uses image recognition technology to locate UI elements so that you can automate games and apps without injecting any code. 
*   **Fully Scalable:** Airtest cases can be easily run on large device farms, using commandline or python API. HTML reports with detailed info and screen recording allow you to quickly locate failure points. NetEase builds Airlab on top of the Airtest Project.
*   **Poco:** Poco adds the ability to directly access object(UI widget) hierarchy across the major platforms and game engines. It allows writing instructions in Python, to achieve more advanced automation.
## Game Test
With image recognition and UI hierarchy, our automation framework support game testing.
- Supports all game engines and apps
- Multiplatform
- Easy to use
## Android native apps
In Android native apps testing process, Airtest can play a siginificant role - plug-and-play.
## Windows applications
Support for Windows applications, write one code and run the it across the platforms.
## iOS Support
With poco, Airtest can access iOS native element and find out their location and attributes, which make iOS testing process easy and convenient.
## Selenium Plugin
Base on Chrome Devtools Protocol, record and generate selenium scripts, accurately access web element.
# Documentation
You can find the complete Airtest documentation on readthedocs.
    </description>
    <releaseNotes># V1.2.3.20200121
## Release Date: 2020-01-21

## New Features
- With better support and compatibility for Android10, Android10 phones can be directly connected and used. However, if the Xiaomi mobile phone is updated to MIUI11, you need to select the 'use Javacap' + 'use ADB orientation' options before you connect it.
- If you use the local python environment to run the script, and you are using an Android 10 phone, please make sure that the airtest of the local python environment has been updated to the latest version v1.1.3.(pip install -U airtest)
- Added a compatibility mode setting item. If you need to use the compatibility mode at startup to view the editing window and log window normally, you can choose a compatibility mode in the IDE settings and restart the IDE. This will default to the compatibility mode in the future. Launch the IDE, see here.
- For some TV apps, a new TV button shortcut window has been added. You can use the mouse to send ADB messages of up, down, left, right, and confirm buttons. For details, see here.
- Yosemite.apk has an updated version. Please reinstall the new version of the application to get better results and compatibility with Android10.
- Airtest has updated the version. There are some changes to the log() and the LogToHtml() . A configuration item for script image precision compression has been added. For details, please see the Airtest update announcement
- Poco-SDK has added support for cocos-creator and UE4 engines. For details, please refer to the documentation.
- Better support for full-screen devices, airtestIDE can adapt to most of the problems of full-screen incompatibility. But for the problem of the inaccurate Poco position of the remaining full-screen devices, the IDE also supports users to set the screen rendering resolution. For details, see here.

## Bug Fixes
- Fixed an issue where the remote device cocosjs failed to connect.
- Fixed screen capture failure when recording .py scripts.
- Fixed ADB touch mode click coordinates error in landscape orientation.
- Fixed a bug that could occur on some computers that could not flash the mobile device.

    </releaseNotes>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
